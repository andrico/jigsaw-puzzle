{"version":3,"sources":["utils/dom.js","utils/pipe.js","utils/tap.js","utils/event-listeners.js","lib/make-canvas.js","lib/load-image.js","lib/make-puzzle.js","utils/object-helpers.js","utils/get-neighbors.js","utils/sides.js","utils/bezier.js","utils/random.js","lib/make-shapes.js","lib/make-pieces.js","lib/shuffle.js","utils/array-helpers.js","lib/paint-piece.js","lib/clear-canvas.js","lib/paint.js","utils/run-if.js","lib/activate.js","lib/deactivate.js","lib/move.js","lib/share-connections.js","lib/is-close.js","lib/snap.js","lib/status.js","lib/gather.js","lib/clone.js","index.js"],"names":["$","selector","document","querySelector","pipe","fns","x","reduce","acc","f","tap","fn","addListener","what","el","cb","name","addEventListener","remove","removeEventListener","event","canvas","scroll","window","resize","click","element","mousedown","mousemove","mouseup","body","updCanvas","state","top","left","getBoundingClientRect","pos","y","makeCanvas","DPI","devicePixelRatio","tagName","createElement","ctx","getContext","height","width","getComputedStyle","parseInt","style","appendChild","loadImage","src","Promise","resolve","image","Image","onload","makePuzzle","ps","img","attraction","container","size","draggable","onComplete","isPortrait","scale","timeStamp","Date","now","done","cols","rows","occupy","isTruthy","prop","obj","removeNull","newObj","Object","keys","forEach","same","val","getNeighbors","i","slot","neighbors","right","bottom","allSides","opposite","side","isVertical","isHorizontal","sw","nw","bezier","pieceSize","knobSize","middle","cx1","cy1","cx2","cy2","ex","ey","bezierInv","b","map","bb","random","hash","Math","cos","sin","makeShapes","piece","getNeighbor","id","find","neighborShape","shapes","min","shapedSides","filter","includes","flatSides","makePieces","puzzle","piecesAmount","Array","pieces","orgPos","floor","curPos","active","connections","shuffle","xs","sort","filterUniqe","Set","randomElement","length","activeLast","connectedFirst","reverse","slice","mapReverse","reduceRight","arr","paintPiece","shapeOffset","max","save","beginPath","translate","drawSide","closePath","clip","drawImage","restore","highlight","alsoActive","shadowColor","strokeStyle","shadowBlur","lineWidth","shadowOffsetX","shadowOffsetY","lineCap","lineJoin","stroke","lineTo","bezierCurveTo","rotate","PI","clearCanvas","clearRect","paint","runIf","isWithinX","e","clientX","isWithinY","clientY","isClicked","getPiecePos","activate","p","deactivate","move","shareConnections","newPiece","isClose","p1","p2","XY","invXY","positive","offset","moveConnections","pieceIds","distance","snap","activePieces","entries","neighbor","newPos","status","gather","clone","JSON","parse","stringify","onChange","changecb","console","warn","initState","eventListeners","newGame","getState","setState","newState","update","destroy","listener"],"mappings":"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","file":"jigsaw-puzzle.min.js","sourceRoot":"../src","sourcesContent":["export const $ = (selector) => document.querySelector(selector);\n","export const pipe = (...fns) => (x) => [...fns].reduce((acc, f) => f(acc), x);\n","export const tap = (fn) => (x) => {\n  fn(x);\n  return x;\n};\n","const addListener = (what, el, cb) => {\n  const name = cb;\n  el.addEventListener(what, cb);\n  return {\n    remove: () => el.removeEventListener(what, name),\n  };\n};\n\nexport const event = (canvas) => ({\n  scroll: (cb) => addListener(\"scroll\", window, cb),\n  resize: (cb) => addListener(\"resize\", window, cb),\n  click: (cb) => addListener(\"click\", canvas.element, cb),\n  mousedown: (cb) => addListener(\"mousedown\", canvas.element, cb),\n  mousemove: (cb) => addListener(\"mousemove\", canvas.element, cb),\n  mouseup: (cb) => addListener(\"mouseup\", document.body, cb),\n});\n","export const updCanvas = (state) => {\n  const { top, left } = state.canvas.element.getBoundingClientRect();\n  // const { width, height } = getComputedStyle(state.canvas.element);\n  state.canvas.pos = { x: left, y: top };\n  // state.canvas.width = parseInt(width, 0);\n  // state.canvas.height = parseInt(height, 0);\n\n  return state;\n};\n\nexport const makeCanvas = (element) => {\n  const DPI = window.devicePixelRatio;\n  const canvas =\n    element.tagName === \"CANVAS\" ? element : document.createElement(\"canvas\");\n  const ctx = canvas.getContext(\"2d\");\n\n  const { height, width } = getComputedStyle(element);\n\n  canvas.width = parseInt(width, 0) * DPI;\n  canvas.height = parseInt(height, 0) * DPI;\n  canvas.style.width = parseInt(width, 0) + \"px\";\n  canvas.style.height = parseInt(height, 0) + \"px\";\n\n  if (element.tagName !== \"CANVAS\") {\n    element.appendChild(canvas);\n  }\n\n  const { top, left } = canvas.getBoundingClientRect();\n\n  return {\n    element: canvas,\n    ctx,\n    pos: { x: left, y: top },\n    width: canvas.width,\n    height: canvas.height,\n    DPI,\n  };\n};\n","export const loadImage = (src) =>\n  new Promise((resolve) => {\n    var image = new Image();\n    image.onload = () =>\n      resolve({ image, width: image.width, height: image.height });\n\n    image.src = src;\n  });\n","export const makePuzzle = (\n  ps,\n  img,\n  attraction,\n  container,\n  size,\n  draggable,\n  onComplete\n) => {\n  const { width, height } = getComputedStyle(container);\n  const isPortrait = img.width < img.height;\n  const DPI = window.devicePixelRatio;\n  const scale =\n    parseInt([isPortrait ? height : width], 0) /\n    img[isPortrait ? \"height\" : \"width\"];\n\n  return {\n    timeStamp: Date.now(),\n    done: false,\n    cols: ps.x,\n    rows: ps.y,\n    width: img.width * scale * DPI,\n    height: img.height * scale * DPI,\n    attraction,\n    scale,\n    occupy: size,\n    draggable,\n    onComplete,\n  };\n};\n","export const isTruthy = (prop) => (obj) => obj[prop];\n\n// rm keys with value null from obj\nexport const removeNull = (obj) => {\n  let newObj = {};\n  Object.keys(obj).forEach((prop) => {\n    if (obj[prop] !== null) {\n      newObj[prop] = obj[prop];\n    }\n  });\n  return newObj;\n};\n\nexport const same = (val, prop) => (obj) => obj[val] === prop;\n","import { removeNull } from './object-helpers.js'\n\n// calculates which pieces are next to given piece\n// breaks if rows/cols are 1\nexport const getNeighbors = (i, rows, cols) => {\n  const slot = i + 1\n\n  const neighbors = {\n    top: slot > cols ? i - cols : null,\n    right: slot % cols !== 0 ? i + 1 : null,\n    bottom: slot <= (rows - 1) * cols ? i + cols : null,\n    left: slot % cols !== 1 ? i - 1 : null,\n  }\n\n  return removeNull(neighbors)\n}\n","export const allSides = [\"top\", \"right\", \"bottom\", \"left\"];\nexport const opposite = (side) =>\n  ({\n    top: \"bottom\",\n    right: \"left\",\n    bottom: \"top\",\n    left: \"right\",\n  }[side]);\n\nexport const isVertical = (side) => side === \"top\" || side === \"bottom\";\nexport const isHorizontal = (side) => !isVertical(side);\n\nexport const sw = (side) => side === \"bottom\" || side === \"left\";\nexport const nw = (side) => side === \"top\" || side === \"left\";\n","export const bezier = (pieceSize = 100, knobSize = 100 /* knobPos = 20 */) => {\n  const scale = knobSize / 110;\n  const middle = pieceSize / 2;\n\n  return [\n    {\n      cx1: 0,\n      cy1: 0,\n      cx2: middle - scale * 10,\n      cy2: scale * 5,\n      ex: middle - scale * 13,\n      ey: scale * 0,\n    }, // left shoulder\n    {\n      cx1: middle - scale * 13,\n      cy1: scale * 0,\n      cx2: middle - scale * 10,\n      cy2: scale * -2,\n      ex: middle - scale * 12,\n      ey: scale * -5,\n    }, // left neck\n    {\n      cx1: middle - scale * 12,\n      cy1: scale * -5,\n      cx2: middle - scale * 30,\n      cy2: scale * -30,\n      ex: middle,\n      ey: scale * -30,\n    }, // left head\n    {\n      cx1: middle,\n      cy1: scale * -30,\n      cx2: middle - scale * -30,\n      cy2: scale * -31,\n      ex: middle - scale * -12,\n      ey: scale * -5,\n    }, // right head\n    {\n      cx1: middle - scale * -12,\n      cy1: scale * -5,\n      cx2: middle - scale * -10,\n      cy2: scale * -2,\n      ex: middle - scale * -13,\n      ey: scale * 0,\n    }, // right neck\n    {\n      cx1: middle - scale * -13,\n      cy1: scale * 0,\n      cx2: middle - scale * -10,\n      cy2: scale * 5,\n      ex: pieceSize,\n      ey: scale * 0,\n    }, // right shoulder\n  ];\n};\n\nexport const bezierInv = (b, y = 1) =>\n  b.map((bb, i) => ({\n    cx1: bb.cx1 * y,\n    cy1: bb.cy1 * -1,\n    cx2: bb.cx2 * y,\n    cy2: bb.cy2 * -1,\n    ex: bb.ex * y,\n    ey: bb.ey * -1,\n  }));\n","// random number 0 - 1, based on hash\nexport const random = (hash = Math.random()) =>\n  (Math.cos(Math.sin((hash + 69) * 1337.1337) * 6669.1337) + 1) * 0.5;\n","import { allSides, opposite, isVertical, sw } from \"./../utils/sides.js\";\nimport { bezier, bezierInv } from \"./../utils/bezier.js\";\nimport { random } from \"./../utils/random.js\";\n\nexport const makeShapes = (acc, piece) => {\n  const getNeighbor = (id) => acc.find((piece) => piece.id === id);\n  const neighborShape = (id, side) =>\n    getNeighbor(id) &&\n    getNeighbor(id).shapes &&\n    getNeighbor(id).shapes[opposite(side)];\n\n  // 'flat' if no neighbor\n  const flatSides = ({ neighbors }) =>\n    allSides\n      .filter((side) => !Object.keys(neighbors).includes(side))\n      .reduce((acc, side) => ({ [side]: \"flat\", ...acc }), {});\n\n  // a random- or an inverse bezier if the neighbor has a shape\n  const shapedSides = ({ neighbors, width, height }) =>\n    Object.keys(neighbors).reduce(\n      (acc, side) => ({\n        [side]: neighborShape(neighbors[side], side) // neighbor has shape\n          ? bezierInv(neighborShape(neighbors[side], side)) // mirror that shape\n          : random() >= 0.5 // else 50/50\n          ? bezier(isVertical(side) ? width : height, Math.min(width, height)) // be 'outy'\n          : bezierInv(\n              bezier(isVertical(side) ? width : height, Math.min(width, height))\n            ), // or 'inny\n        ...acc,\n      }),\n      {}\n    );\n\n  const shapes = {\n    ...shapedSides(piece),\n    ...flatSides(piece),\n  };\n\n  return [{ ...piece, shapes }, ...acc];\n};\n","import { getNeighbors } from \"./../utils/get-neighbors.js\";\nimport { makeShapes } from \"./make-shapes.js\";\n\nexport const makePieces = (puzzle) => {\n  const piecesAmount = [...Array(puzzle.rows * puzzle.cols)];\n  const width = (puzzle.width / puzzle.cols) * puzzle.occupy;\n  const height = (puzzle.height / puzzle.rows) * puzzle.occupy;\n  const pieces = piecesAmount\n    .map((x, i) => ({\n      id: i,\n      orgPos: {\n        x: (i % puzzle.cols) * width,\n        y: Math.floor(i / puzzle.cols) * height,\n      },\n      curPos: { x: 0, y: 0 },\n      width,\n      height,\n      neighbors: getNeighbors(i, puzzle.rows, puzzle.cols),\n      active: false, // if clicked/dragged\n      connections: [], // every other piece this one is snapped together with\n    }))\n    .reduce(makeShapes, []);\n\n  return pieces;\n};\n","import { random } from \"./../utils/random.js\";\n\nexport const shuffle = (state) => ({\n  ...state,\n  pieces: state.pieces.map((piece, i) => ({\n    ...piece,\n    connections: [],\n    curPos: {\n      x: random(i) * (state.canvas.width - state.pieces[0].width),\n      y: random(i + 123) * (state.canvas.height - state.pieces[0].height),\n    },\n  })),\n});\n","const { floor, random } = Math;\n\nexport const shuffle = (xs) =>\n  xs\n    .map((x) => [random(), x])\n    .sort((x, y) => x[0] - y[0])\n    .map((x) => x[1]);\n\n// shallow filtering\nexport const filterUniqe = (xs) => [...new Set(xs)];\nexport const randomElement = (xs) => xs[floor(random() * xs.length)];\nexport const activeLast = (x, y) => (y.active ? -1 : 1);\nexport const connectedFirst = (x, y) =>\n  x.connections.length > y.connections.length ? -1 : 1;\nexport const reverse = (xs) => xs.slice(0).reverse();\nexport const map = (fn) => (xs) => xs.map(fn);\nexport const mapReverse = (fn) => (xs) =>\n  xs.reduceRight((acc, el, i, arr) => [...acc, fn(el, i, arr, acc)], []);\n\nexport const sort = (fn) => (xs) => xs.sort(fn);\n","import { allSides } from \"./../utils/sides.js\";\n\nexport const paintPiece = (state) => (piece) => {\n  const { image } = state.image;\n  const { ctx, DPI } = state.canvas;\n  const { scale, occupy } = state.puzzle;\n  const shapeOffset = Math.max(piece.width, piece.height);\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.translate(piece.curPos.x, piece.curPos.y + piece.height);\n\n  allSides.forEach((side) => {\n    drawSide(ctx, piece.shapes[side], {\n      x: side === \"top\" || side === \"bottom\" ? -piece.height : -piece.width,\n      y: side === \"top\" || side === \"bottom\" ? piece.width : piece.height,\n    });\n  });\n\n  ctx.closePath();\n  ctx.clip();\n\n  ctx.drawImage(\n    image, // image\n    (piece.orgPos.x - shapeOffset) / scale / DPI / occupy, // what part of image\n    (piece.orgPos.y - shapeOffset) / scale / DPI / occupy, // what part of image\n    (piece.width + shapeOffset * 2) / scale / DPI / occupy, // how much of image\n    (piece.height + shapeOffset * 2) / scale / DPI / occupy, // how much of image\n    piece.curPos.x / state.canvas.width - shapeOffset, // where on canvas\n    piece.curPos.y / state.canvas.height - shapeOffset - piece.height, // where on canvas\n    piece.width + shapeOffset * 2, // how big on canvas\n    piece.height + shapeOffset * 2 // how big on canvas\n  );\n\n  ctx.restore();\n\n  const highlight = !state.puzzle.done && (piece.active || piece.alsoActive);\n\n  ctx.shadowColor = highlight\n    ? \"rgba(100, 100, 100, 1)\"\n    : \"rgba(50, 50, 50, 1)\";\n  ctx.strokeStyle = highlight\n    ? \"rgba(225, 225, 225, 1)\"\n    : \"rgba(220, 220, 220, 1)\";\n  ctx.shadowBlur = highlight ? 2 : 1;\n  ctx.lineWidth = highlight ? 2 : 1;\n\n  ctx.shadowOffsetX = ctx.shadowOffsetY = -1;\n  ctx.lineCap = \"round\";\n  ctx.lineJoin = \"round\";\n\n  ctx.stroke();\n\n  return piece;\n};\n\nfunction drawSide(ctx, side, size) {\n  ctx.translate(0, size.x);\n\n  if (side === \"flat\") {\n    ctx.lineTo(size.y, 0);\n  } else {\n    side.forEach((b) => {\n      ctx.bezierCurveTo(b.cx1, b.cy1, b.cx2, b.cy2, b.ex, b.ey);\n    });\n  }\n\n  ctx.rotate(Math.PI / 2);\n}\n","export const clearCanvas = (state, ctx) => {\n  ctx.clearRect(0, 0, state.canvas.width, state.canvas.height);\n  return ctx;\n};\n","import { map } from \"./../utils/array-helpers.js\";\nimport { paintPiece } from \"./paint-piece.js\";\nimport { clearCanvas } from \"./clear-canvas.js\";\n\nexport const paint = (state) => ({\n  ...state,\n  canvas: {\n    ...state.canvas,\n    ctx: clearCanvas(state, state.canvas.ctx),\n  },\n  pieces: map(paintPiece(state))(state.pieces),\n});\n","// ex. runIf(console.log)(true)('foo') -> prints 'foo'\n// ex. runIf(console.log)(false)('bar') -> returns 'bar'\n// ex. runIf(console.log)(x => x === 'bar'))('bar') -> prints 'bar'\nexport const runIf = (fn) => (x) => (y) =>\n  (typeof x === \"function\" ? x(y) : x) ? fn(y) : y;\n","import { activeLast, mapReverse, sort, map } from \"./../utils/array-helpers.js\";\nimport { isTruthy } from \"./../utils/object-helpers.js\";\nimport { runIf } from \"./../utils/run-if.js\";\nimport { pipe } from \"./../utils/pipe.js\";\nimport { tap } from \"./../utils/tap.js\";\n\nconst isWithinX = (state, piece, e) =>\n  (e.clientX - state.canvas.pos.x) * state.canvas.DPI >= piece.curPos.x &&\n  (e.clientX - state.canvas.pos.x) * state.canvas.DPI <=\n    piece.curPos.x + piece.width;\n\nconst isWithinY = (state, piece, e) =>\n  (e.clientY - state.canvas.pos.y) * state.canvas.DPI >= piece.curPos.y &&\n  (e.clientY - state.canvas.pos.y) * state.canvas.DPI <=\n    piece.curPos.y + piece.height;\n\nconst isClicked = (state, piece, e) =>\n  isWithinX(state, piece, e) && isWithinY(state, piece, e);\n\nconst getPiecePos = (state, piece, e) => ({\n  x: (e.clientX - state.canvas.pos.x) * state.canvas.DPI - piece.curPos.x,\n  y: (e.clientY - state.canvas.pos.y) * state.canvas.DPI - piece.curPos.y,\n});\n\n// pieces gets painted bottom to top, we need to check in reverse order\nexport const activate = (e) => (state) => ({\n  ...state,\n  pieces: pipe(\n    // activate clicked piece (first occurence)\n    mapReverse((piece, i, arr, acc) => ({\n      ...piece,\n      active:\n        !acc.find(isTruthy(\"active\")) && isClicked(state, piece, e)\n          ? getPiecePos(state, piece, e)\n          : false,\n    })),\n\n    mapReverse((piece, i, arr) => ({\n      ...piece,\n      // activate the active piece's connections\n      active: arr.find((p) => p.active && p.connections.includes(piece.id))\n        ? getPiecePos(state, piece, e)\n        : // activate all pieces if none was clicked (and puzzle is draggable)\n        !arr.find(isTruthy(\"active\")) && state.puzzle.draggable\n        ? getPiecePos(state, piece, e)\n        : piece.active,\n    })),\n\n    // put the active piece(s) on top\n    // if puzzle isn't done or not all pieces are active (puzzle dragged)\n    runIf(sort(activeLast))(\n      (ps) =>\n        !state.puzzle.done &&\n        ps.filter((p) => p.active).length !== state.pieces.length\n    )\n  )(state.pieces),\n});\n","export const deactivate = (state) => ({\n  ...state,\n  pieces: state.pieces\n    // .sort(connectedFirst)\n    .map((piece) => ({\n      ...piece,\n      active: false,\n    })),\n});\n","export const move = ({ clientX, clientY }) => (state) => ({\n  ...state,\n  pieces: state.pieces.map((piece) => ({\n    ...piece,\n    curPos: piece.active\n      ? {\n          x: (clientX - state.canvas.pos.x) * state.canvas.DPI - piece.active.x,\n          y: (clientY - state.canvas.pos.y) * state.canvas.DPI - piece.active.y,\n        }\n      : piece.curPos,\n  })),\n});\n","import { filterUniqe } from \"./../utils/array-helpers.js\";\n\n// should return, not modify\nexport const shareConnections = (state, piece, newPiece) => {\n  piece.connections = filterUniqe([\n    piece.id,\n    newPiece.id,\n    ...piece.connections,\n    ...newPiece.connections,\n  ]);\n\n  piece.connections.forEach((id) => {\n    const connection = state.pieces.find((piece) => piece.id === id);\n    connection.connections = filterUniqe(piece.connections);\n  });\n\n  newPiece.connections.forEach((id) => {\n    const connection = state.pieces.find((piece) => piece.id === id);\n    connection.connections = filterUniqe(piece.connections);\n  });\n};\n","import { isVertical, nw } from \"./../utils/sides.js\";\n\n// is piece1 close to piece2\nexport const isClose = (p1, p2, state, side) => {\n  const { attraction } = state.puzzle;\n\n  const XY = isVertical(side) ? \"y\" : \"x\";\n  const invXY = XY === \"x\" ? \"y\" : \"x\";\n\n  const positive = nw(side) ? false : true;\n\n  const size = p1[XY === \"y\" ? \"height\" : \"width\"];\n  const offset = positive ? p2.curPos[XY] + size : p2.curPos[XY] - size;\n\n  return (\n    p1.curPos[XY] <= offset + attraction &&\n    p1.curPos[XY] >= offset - attraction &&\n    p1.curPos[invXY] <= p2.curPos[invXY] + attraction &&\n    p1.curPos[invXY] >= p2.curPos[invXY] - attraction\n  );\n};\n","import { shareConnections } from \"./share-connections.js\";\nimport { isClose } from \"./is-close.js\";\nimport { same } from \"./../utils/object-helpers.js\";\n\nconst moveConnections = (state, [...pieceIds], distance) => {\n  pieceIds.forEach((id) => {\n    const piece = state.pieces.find(same(\"id\", id));\n    piece.curPos = {\n      x: piece.curPos.x + distance.x,\n      y: piece.curPos.y + distance.y,\n    };\n  });\n};\n\n// export const snapNew = (state) => ({\n//   ...state,\n//   pieces: state.pieces.map((piece) => ({\n//     ...piece,\n//     curPos:\n//       !piece.active ||\n//       !Object.entries(piece.neighbors).find(([side, id]) =>\n//         isClose(state.pieces.find(same(\"id\", id)), piece, state, side)\n//       )\n//         ? piece.curPos\n//         : { x: 10, y: 20 }\n//   }))\n// });\n\nexport const snap = (state) => {\n  const activePieces = state.pieces.filter((piece) => piece.active);\n\n  if (!activePieces.length || activePieces.length === state.pieces.length) {\n    return state;\n  }\n\n  activePieces.forEach((piece) => {\n    Object.entries(piece.neighbors).forEach(([side, id]) => {\n      const neighbor = state.pieces.find(same(\"id\", id));\n\n      if (isClose(neighbor, piece, state, side)) {\n        const newPos = {\n          x:\n            neighbor.curPos.x +\n            (side === \"right\"\n              ? -neighbor.width\n              : side === \"left\"\n              ? +neighbor.width\n              : 0),\n          y:\n            neighbor.curPos.y +\n            (side === \"top\"\n              ? neighbor.height\n              : side === \"bottom\"\n              ? -neighbor.height\n              : 0),\n        };\n\n        // order is important\n        moveConnections(state, piece.connections, {\n          x: newPos.x - piece.curPos.x,\n          y: newPos.y - piece.curPos.y,\n        });\n\n        piece.curPos = newPos;\n\n        // piece.connections = neighbor.connections = shareConnections(state, piece, neighbor);\n\n        shareConnections(state, piece, neighbor);\n      }\n    });\n  });\n\n  return state;\n};\n","export const status = (state) => {\n  if (\n    state.pieces[0].connections.length ===\n      state.puzzle.rows * state.puzzle.cols &&\n    !state.puzzle.done\n  ) {\n    state.puzzle.done = true;\n    state.puzzle.onComplete(state);\n  }\n  return state;\n};\n","export const gather = (state) => {\n  /**\n   * map pieces and move them onto the board after window resize\n   */\n  state.pieces = state.pieces.map((piece) => ({\n    ...piece,\n    curPos: {\n      x:\n        piece.curPos.x - piece.width > state.canvas.width * state.canvas.DPI\n          ? state.canvas.width - piece.width\n          : piece.curPos.x,\n      y:\n        piece.curPos.y - piece.height > state.canvas.height * state.canvas.DPI\n          ? state.canvas.height - piece.height\n          : piece.curPos.y,\n    },\n  }));\n  return state;\n};\n","export const clone = (state) => ({\n  image: state.image,\n  canvas: state.canvas,\n  pieces: JSON.parse(JSON.stringify(state.pieces)),\n  puzzle: JSON.parse(JSON.stringify(state.puzzle)),\n});\n","import { $ } from \"./utils/dom.js\";\nimport { pipe } from \"./utils/pipe.js\";\nimport { tap } from \"./utils/tap.js\";\nimport { event } from \"./utils/event-listeners.js\";\n\nimport { makeCanvas, updCanvas } from \"./lib/make-canvas.js\";\nimport { loadImage } from \"./lib/load-image.js\";\nimport { makePuzzle } from \"./lib/make-puzzle.js\";\nimport { makePieces } from \"./lib/make-pieces.js\";\nimport { shuffle } from \"./lib/shuffle.js\";\nimport { paint } from \"./lib/paint.js\";\nimport { activate } from \"./lib/activate.js\";\nimport { deactivate } from \"./lib/deactivate.js\";\nimport { move } from \"./lib/move.js\";\nimport { snap } from \"./lib/snap.js\";\nimport { status } from \"./lib/status.js\";\nimport { gather } from \"./lib/gather.js\";\nimport { clone } from \"./lib/clone.js\";\n\nexport const puzzle = async ({\n  element,\n  restore = {},\n  image: img = \"\",\n  pieces: ps = { x: 6, y: 4 },\n  attraction = 20,\n  size = 0.8,\n  draggable = false,\n  onComplete = () => {},\n  onChange: changecb = () => {},\n}) => {\n  // game board\n  const container = typeof element === \"string\" ? $(element) : element;\n\n  if (!container) {\n    console.warn(`Couldn't find element: ${element}`);\n    return;\n  }\n\n  // initial setup\n  const canvas = makeCanvas(container);\n  const image = restore.image || (await loadImage(img));\n  const puzzle = () =>\n    restore.puzzle ||\n    makePuzzle(ps, image, attraction, container, size, draggable, onComplete);\n  const pieces = restore.pieces || makePieces(puzzle());\n\n  // passed on-change callback\n  const onChange = tap(pipe(clone, changecb));\n\n  // initial state\n  const initState = () => ({\n    image,\n    canvas,\n    pieces,\n    puzzle: puzzle(),\n  });\n\n  // 'global' game state\n  let state = initState();\n\n  // initial paint\n  state = restore.puzzle ? pipe(paint)(state) : pipe(shuffle, paint)(state);\n\n  // user interactions\n  const eventListeners = [\n    event(window).resize(\n      (e) => (state = pipe(updCanvas, gather, paint)(state))\n    ),\n    event(window).scroll((e) => (state = pipe(updCanvas)(state))),\n    event(state.canvas).mousedown(\n      (e) => (state = pipe(activate(e), paint)(state))\n    ),\n    event(state.canvas).mousemove((e) => (state = pipe(move(e), paint)(state))),\n    event(document.body).mouseup(\n      (e) => (state = pipe(snap, deactivate, status, paint, onChange)(state))\n    ),\n  ];\n\n  // exposed api\n  return {\n    newGame: () => (state = pipe(shuffle, paint)(initState())),\n    getState: () => clone(state),\n    setState: (newState) => (state = pipe(clone, paint)(newState)),\n    update: () => (state = pipe(updCanvas, paint)(state)),\n    destroy: () => {\n      if (element.tagName !== \"CANVAS\") {\n        state.canvas.element.remove();\n      }\n\n      state = null;\n      eventListeners.map((listener) => listener.remove());\n    },\n  };\n};\n\nexport default puzzle;\n"]}